"""Add Vulnerability model

Revision ID: 0adc2b3207a3
Revises: 
Create Date: 2025-02-07 03:21:07.913728

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0adc2b3207a3'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('extracted_features',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('request_method', sa.String(), nullable=True),
    sa.Column('url_pattern', sa.String(), nullable=True),
    sa.Column('alert_type', sa.String(), nullable=True),
    sa.Column('response_headers', sa.Text(), nullable=True),
    sa.Column('response_body', sa.Text(), nullable=True),
    sa.Column('cvss_score', sa.Float(), nullable=True),
    sa.Column('severity', sa.String(), nullable=True),
    sa.Column('reference_urls', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_extracted_features_id'), 'extracted_features', ['id'], unique=False)
    op.drop_table('cve_data')
    op.alter_column('vulnerabilities', 'cve_id',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('vulnerabilities', 'description',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
    op.alter_column('vulnerabilities', 'cvss_score',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('vulnerabilities', 'severity',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_index('ix_vulnerabilities_cve_id', table_name='vulnerabilities')
    op.create_unique_constraint(None, 'vulnerabilities', ['cve_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'vulnerabilities', type_='unique')
    op.create_index('ix_vulnerabilities_cve_id', 'vulnerabilities', ['cve_id'], unique=True)
    op.alter_column('vulnerabilities', 'severity',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('vulnerabilities', 'cvss_score',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('vulnerabilities', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('vulnerabilities', 'cve_id',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.create_table('cve_data',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('cve_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('severity', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('exploitability_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='cve_data_pkey'),
    sa.UniqueConstraint('cve_id', name='cve_data_cve_id_key')
    )
    op.drop_index(op.f('ix_extracted_features_id'), table_name='extracted_features')
    op.drop_table('extracted_features')
    # ### end Alembic commands ###
